name: Release

on:
  push:
    branches:
      - dev
      - main

jobs:
  getversion:
    name: GenVersion
    runs-on: windows-latest
    outputs:
      nextversion: ${{ steps.setNextVersion.outputs.nextVersion }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'
          
      - uses: actions/setup-node@v2
        with:
          node-version: '20'
     
      - name: Add plugin for conventional commits
        run: npm install conventional-changelog-conventionalcommits@7.0.1
        working-directory: ./.github/workflows

      - name: Add plugin for executing bash commands
        run: npm install @semantic-release/exec -D
        working-directory: ./.github/workflows

      - name: Add plugin for executing bash commands
        run: npx semantic-release --dry-run --debug
        working-directory: ./.github/workflows
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: pksorensen
          GIT_AUTHOR_EMAIL: poul@kjeldager.com
        

      - name: Dry Run Semantic to get next Version nummber
        working-directory: ./.github/workflows
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: pksorensen
          GIT_AUTHOR_EMAIL: poul@kjeldager.com
        run: |
          echo "RELEASE_VERSION=$((npx semantic-release --dry-run).Where({ $_ -like '*Release note*' }) | Out-String | Select-String '[0-9]+\.[0-9]+\.[0-9]+([-][a-zA-z]+[.][0-9]*)?' | % { $_.Matches } | % { $_.Value })" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Print release verison
        run: echo ${env:RELEASE_VERSION}
      - name: Check PRs
        id: setNextVersion
        run: echo "nextVersion=${env:RELEASE_VERSION}" >> "$GITHUB_OUTPUT"

  release:
    needs: [getversion]
    name: Release
    runs-on: ubuntu-latest
    env:
      RELEASE_VERSION: ${{ needs.getversion.outputs.nextVersion}}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Cleaning
        run: dotnet clean

      - name: Install Tooling
        run: npm install

      - name: Gen Types
        run: npm run gencsharp

      - name: Restore NuGet packages
        run: dotnet restore EAVFW.Extensions.OpenTelemetry.sln
      
      - name: print version
        run: echo ${{ needs.getversion.outputs.nextVersion}}

      - name: Package Parser
        run: dotnet pack -c Release -p:PackageVersion=${{ needs.getversion.outputs.nextVersion}}+ -o ./artifacts
        if: ${{ needs.getversion.outputs.nextVersion}}

      - name: Release to GitHub and NuGet
        working-directory: .\\.github\\workflows
        env:
          CI_NUGET_API_KEY: ${{ secrets.CI_NUGET_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: pksorensen
          GIT_AUTHOR_EMAIL: poul@kjeldager.com
        run: npx semantic-release